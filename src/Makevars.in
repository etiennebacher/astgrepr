TARGET_DIR = ./rust/target
LIBDIR = $(TARGET_DIR)/@LIBDIR@
STATLIB = $(LIBDIR)/libastgrepr.a
PKG_LIBS = -L$(LIBDIR) -lastgrepr -lutil

all: $(SHLIB) rust_clean

.PHONY: $(STATLIB)

$(SHLIB): $(STATLIB)

CARGOTMP = $(CURDIR)/.cargo
VENDOR_DIR = $(CURDIR)/vendor


# RUSTFLAGS appends --print=native-static-libs to ensure that
# the correct linkers are used. Use this for debugging if need.
#
# CRAN note: Cargo and Rustc versions are reported during
# configure via tools/msrv.R.
#
# vendor.tar.xz, if present, is unzipped and used for offline compilation.
$(STATLIB):

	if [ -f ./rust/vendor.tar.xz ]; then \
		tar xf rust/vendor.tar.xz && \
		mkdir -p $(CARGOTMP) && \
		cp rust/vendor-config.toml $(CARGOTMP)/config.toml; \
	fi

# Setting MACOSX_DEPLOYMENT_TARGET=15.0 to avoid the message
# ld: warning: object file
# (/private/tmp/astgrepr.Rcheck/00_pkg_src/astgrepr/src/rust/target/release/libastgrepr.a[3](ea708c7824d36062-parser.o))
# was built for newer 'macOS' version (15.5) than being linked (15.0)
#
# See Uwe's email on 2025-06-05.
# See also https://users.rust-lang.org/t/compile-rust-binary-for-older-versions-of-mac-osx/38695/5
# This might need to be updated in the future depending on the settings of
# BDR's M1 Mac.
# https://www.stats.ox.ac.uk/pub/bdr/M1mac/README.txt

	export MACOSX_DEPLOYMENT_TARGET=15.0 && \
	export CARGO_HOME=$(CARGOTMP) && \
	export PATH="$(PATH):$(HOME)/.cargo/bin" && \
	RUSTFLAGS="$(RUSTFLAGS) --print=native-static-libs" cargo build @CRAN_FLAGS@ --lib @PROFILE@ --manifest-path=./rust/Cargo.toml --target-dir $(TARGET_DIR) @TARGET@

	# Always clean up CARGOTMP
	rm -Rf $(CARGOTMP);

rust_clean: $(SHLIB)
	rm -Rf $(CARGOTMP) $(VENDOR_DIR) @CLEAN_TARGET@

clean:
	rm -Rf $(SHLIB) $(STATLIB) $(OBJECTS) $(TARGET_DIR)
